import numpy as np
from PIL import Image
from img_gen import init

def apply_bulge_effect(image_path, center_x, center_y, radius, strength):
    """Bulge effect baseline generated by Claude"""
    # Open the image
    img = Image.open(image_path)
    
    # Convert the image to a numpy array
    img_array = np.array(img)

    # Get image dimensions
    height, width = img_array.shape[:2]

    # Create meshgrid
    y, x = np.ogrid[:height, :width]

    # Calculate distance from center
    distance = np.sqrt((x - center_x)**2 + (y - center_y)**2)

    # Create bulge effect
    bulge = distance * (1 - (distance / radius)**2) * strength

    # Apply bulge effect only within the specified radius
    mask = distance <= radius
    x_bulged = x - bulge * (x - center_x) / distance * mask
    y_bulged = y - bulge * (y - center_y) / distance * mask

    # Clip values to ensure they're within image boundaries
    x_bulged = np.clip(x_bulged, 0, width - 1)
    y_bulged = np.clip(y_bulged, 0, height - 1)

    # Remap pixels
    bulged_img = img_array[y_bulged.astype(int), x_bulged.astype(int)]

    # Convert back to PIL Image and return
    return Image.fromarray(bulged_img)

if __name__ == "__main__":

    input_image = "path/to/your/image.jpg"
    output_image = "path/to/output/bulged_image.jpg"

    # Apply bulge effect
    bulged_img = apply_bulge_effect(input_image, center_x=500, center_y=500, radius=300, strength=0.5)

    # Save the result
    bulged_img.save(output_image)
    print(f"Bulged image saved as {output_image}")
